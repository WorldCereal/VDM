apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-wcpdr
  labels:
    app.kubernetes.io/name: app-wcpdr
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.frontend.replicas | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: app-wcpdr
      app.kubernetes.io/instance: {{ .Release.Name }}
  # strategy:
  #   type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-wcpdr
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.frontend.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: app-config
          configMap:
            name: app-wcpdr-config
      containers:
        - name: app-wcpdr
          image: "{{ .Values.frontend.image }}"
          # imagePullPolicy: Always
          env:
            - name: REACT_APP_apiBackendHost
              value: "vdm.{{ .Values.domain }}"
            - name: REACT_APP_apiBackendPath
              value: "backend"
            - name: REACT_APP_apiBackendProtocol
              value: "https"
            - name: TZ
              value: "{{ .Values.timezone }}"
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: app-config
              mountPath: /srv/www/app/static/js/runtimeConfig.js
              subPath: runtimeConfig.js
              readOnly: true
      restartPolicy: Always
